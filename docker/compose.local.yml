version: "3.8"
services:
  kafka:
    image: bitnami/kafka:3.7
    container_name: rta-kafka
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,INTERNAL://:29092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092,INTERNAL://kafka:29092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,INTERNAL:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - ALLOW_PLAINTEXT_LISTENER=yes
    ports: ["9092:9092"]
    volumes: [ "kafka_data:/bitnami/kafka" ]

  postgres:
    image: postgres:16-alpine
    container_name: rta-postgres
    environment:
      - POSTGRES_USER=ads
      - POSTGRES_PASSWORD=ads
      - POSTGRES_DB=adsdb
    ports: ["5432:5432"]
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./docker/postgres-init.sql:/docker-entrypoint-initdb.d/01-init.sql:ro

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: rta-kafka-ui
    depends_on: [kafka]
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:29092
    ports: ["8080:8080"]

volumes:
  kafka_data:
  pg_data:
